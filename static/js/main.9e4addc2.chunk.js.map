{"version":3,"sources":["WeatherApp/CurrentWeather.js","WeatherApp/DailyWeather.js","WeatherApp/HourWeather.js","WeatherApp/Nav.js","WeatherApp/Main.js","index.js"],"names":["CurrentWeather","weatherInfo","className","name","sys","country","Math","round","main","temp","src","weather","icon","alt","temp_max","temp_min","pressure","humidity","DailyWeather","dailyWeather","dailyDay","map","daily","feels_like","day","eve","random","HourWeather","data","labels","times","datasets","label","hourlyWeather","borderColor","backgroundColor","borderWidth","legend","display","position","fontColor","fontSize","options","maintainAspectRatio","Nav","activeClassName","exact","to","days","timeArr","hourlyTemp","Main","useState","location","setLocation","inputRef","useRef","setWeatherInfo","setDailyWeather","setDailyDay","setTimes","setHourlyWeather","useEffect","current","focus","type","placeholder","value","onChange","e","target","ref","onKeyPress","key","axios","get","then","res","lon","coord","lat","dailyRes","i","length","dayNum","Date","dt","getDay","push","timeData","hourly","slice","timeNum","getHours","tempH","j","catch","err","alert","undefined","path","render","index","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9e4addc2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CurrentWeather({weatherInfo}) {\r\n    return (\r\n        <div className=\"CurrentWeather\">\r\n            <p className=\"location\">{weatherInfo.name},<span className=\"country\">{weatherInfo.sys.country}</span></p>\r\n            <p className=\"temperature\">{Math.round(weatherInfo.main.temp - 273.15)}째C</p>\r\n            <img src={`http://openweathermap.org/img/w/${weatherInfo.weather[0].icon}.png`} alt={weatherInfo.weather[0].icon} className=\"image\" />\r\n            <p className=\"weather\">{weatherInfo.weather[0].main}</p>\r\n            <p className=\"max-temp\">Max: {Math.round(weatherInfo.main.temp_max - 273.15)}째C  <span className=\"min-temp\">Min: {Math.round(weatherInfo.main.temp_min - 273.15)}째C</span></p>\r\n            <p className=\"pressure\">pressure: {weatherInfo.main.pressure}psi</p>\r\n            <p className=\"hummidity\">hummidity: {weatherInfo.main.humidity}%</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React from 'react';\r\n\r\nfunction DailyWeather({dailyWeather, dailyDay}) {\r\n    \r\n    return (\r\n       <div className=\"daily-weather\">\r\n       \r\n          {\r\n              dailyWeather.map(daily => {\r\n                  return <div className=\"daily-box\" key={Math.random()*1+8}>\r\n\r\n                  <p>{/** Make Day of week */}</p>\r\n\r\n                  <p className=\"temp\">Max-Temp: {Math.round(daily.feels_like.day -273.15)} Min-Temp: {Math.round(daily.feels_like.eve -273.15)}</p>\r\n\r\n                  <img src={`http://openweathermap.org/img/w/${daily.weather[0].icon}.png`} alt={daily.weather[0].icon} className=\"daily-image\" />\r\n\r\n                  <p className=\"weather-info\">{daily.weather[0].main}</p>\r\n\r\n                  <p className=\"humidity\">Humidity: {daily.humidity}</p>\r\n                  \r\n                  </div>\r\n              })\r\n          }\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default DailyWeather;\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nfunction HourWeather({times, hourlyWeather}) {\r\n    const data = {\r\n        labels: times,\r\n        datasets: [\r\n            {\r\n               label: 'Per Hour weather forcast in 째C',\r\n               data: hourlyWeather,\r\n               borderColor: ['rgba(235, 77, 75,0.2)'],\r\n               backgroundColor: ['rgba(235, 77, 75,1.0)'],\r\n               borderWidth: 3\r\n            }\r\n         ],\r\n    }\r\n    const legend = {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n            fontColor: \"#323130\",\r\n            fontSize: 14\r\n        }\r\n    };\r\n        \r\nconst options ={\r\n    maintainAspectRatio: false\t// Don't maintain w/h ratio\r\n}\r\n    return (\r\n        <div className=\"line-graph\">\r\n            <Line data={data} legend={legend} options={options} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourWeather\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nfunction Nav() {\r\n    return (\r\n        <div className=\"navbar\">\r\n           <ul>\r\n              <li><NavLink activeClassName=\"nav-active\" className=\"nav-item\" exact to=\"/\">Home</NavLink></li>\r\n              <li><NavLink activeClassName=\"nav-active\" className=\"nav-item\" exact to=\"/daily\">Daily</NavLink></li>\r\n              <li><NavLink activeClassName=\"nav-active\" className=\"nav-item\" exact to=\"/hour\">Hourly</NavLink></li>\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React,{useState, useEffect, useRef} from 'react';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport DailyWeather from './DailyWeather';\r\nimport HourWeather from './HourWeather';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport axios from 'axios';\r\n\r\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nlet temp = [];\r\nlet timeArr = [];\r\nconst hourlyTemp = []\r\nfunction Main() {\r\n    const [location, setLocation] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [weatherInfo, setWeatherInfo] = useState({}); //this useState object is for home page.(curreWeather.js)\r\n    const [dailyWeather, setDailyWeather] = useState([]);//this useState object is for Daily weather Update page.(DailyWeather.js)\r\n    const [dailyDay, setDailyDay] = useState([]);\r\n\r\n    const [times, setTimes] = useState([])\r\n    const [hourlyWeather, setHourlyWeather] = useState([]); //this useState object is for ourly weather update....\r\n\r\n    //creating input focus ref...\r\n    useEffect(()=> {\r\n        inputRef.current.focus();\r\n    }, [])\r\n\r\n    //Input event Handler...\r\n    const changeInput = (e) => {\r\n        setLocation(e.target.value)\r\n    }\r\n\r\n    //if the user pressed the Enter key then only the API call will make otherwise nothing happen..\r\n    const keyPressed = (e) => {\r\n        if(e.key === \"Enter\") {\r\n            axios.get(`httpS://api.openweathermap.org/data/2.5/weather?q=${location}&appid=f81a225131b81dba99d6c46cc0023d66`)\r\n            .then(res => {\r\n                let lon = res.data.coord.lon;\r\n                let lat = res.data.coord.lat;\r\n                setWeatherInfo(res.data);\r\n                setLocation('');\r\n\r\n                //calling second API for daily weather Update...\r\n                axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=f81a225131b81dba99d6c46cc0023d66`)\r\n                .then (dailyRes => {\r\n                    setDailyWeather(dailyRes.data.daily);\r\n                    let data = dailyRes.data.daily;\r\n                    for(let i=0; i<data.length; i++) {\r\n                        let date = new Date(data[i].dt*1000);\r\n                        let dayNum = date.getDay();\r\n                        temp.push(days[dayNum])\r\n                    };\r\n                    setDailyDay(temp);\r\n                    //console.log(dailyRes.data.hourly);\r\n                    let timeData = dailyRes.data.hourly.slice(0, 23)\r\n                    for(let i=0; i<timeData.length; i++) {\r\n                        let time = new Date(timeData[i].dt*1000);\r\n                        let timeNum = time.getHours();\r\n                        timeArr.push(timeNum);\r\n                        setTimes(timeArr)\r\n                    };\r\n                    let tempH = timeData.slice(0, 23);\r\n                    for(let j=0; j<tempH.length; j++) {\r\n                        hourlyTemp.push(Math.round(tempH[j].temp - 273.15))\r\n                    }\r\n                    setHourlyWeather(hourlyTemp)\r\n                })\r\n            })\r\n            .catch(err => {\r\n                alert(err);\r\n                setLocation('');\r\n            })\r\n        }\r\n    };\r\n    return (\r\n    <div className=\"container\">\r\n        <Nav />\r\n        <div className=\"input-field\">\r\n            <input type=\"text\" placeholder=\"search\" className=\"input\" value={location} onChange={changeInput} ref={inputRef} onKeyPress={keyPressed} />\r\n            <FaSearch className=\"search-icon\" />\r\n        </div>\r\n           {\r\n            weatherInfo.main !== undefined ? <Switch>\r\n                  <Route exact path='/' render={()=> <CurrentWeather weatherInfo={weatherInfo} />} />\r\n\r\n                  <Route path=\"/daily\" render={()=> <DailyWeather dailyWeather={dailyWeather} dailyDay={dailyDay} key={dailyWeather.index} />} />\r\n\r\n                  <Route path=\"/hour\" render={() => <HourWeather hourlyWeather={hourlyWeather} times={times} />} />\r\n               </Switch> : null\r\n           }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Render from './WeatherApp/Main'\nimport {BrowserRouter} from 'react-router-dom';\nimport './WeatherApp/Style.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Render />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}